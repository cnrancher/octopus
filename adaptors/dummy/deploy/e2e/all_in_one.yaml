apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    devices.edge.cattle.io/description: dummy device description
    devices.edge.cattle.io/device-property: ""
    devices.edge.cattle.io/enable: "true"
    devices.edge.cattle.io/icon: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: octopus-adaptor-dummy
    app.kubernetes.io/version: master
  name: dummyprotocoldevices.devices.edge.cattle.io
spec:
  group: devices.edge.cattle.io
  names:
    kind: DummyProtocolDevice
    listKind: DummyProtocolDeviceList
    plural: dummyprotocoldevices
    singular: dummyprotocoldevice
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DummyProtocolDevice is the Schema for the dummy protocol device
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DummyProtocolDeviceSpec defines the desired state of DummyProtocolDevice.
            properties:
              extension:
                description: Specifies the extension of device.
                properties:
                  mqtt:
                    description: Specifies the MQTT settings.
                    properties:
                      client:
                        description: Specifies the client settings.
                        properties:
                          autoReconnect:
                            description: Configures using the automatic reconnection
                              logic. The default value is "true".
                            type: boolean
                          basicAuth:
                            description: Specifies the username and password that
                              the client connects to the MQTT broker. Without the
                              use of TLSConfig, the account information will be sent
                              in plaintext across the wire.
                            properties:
                              password:
                                description: Specifies the password for basic authenication.
                                type: string
                              passwordRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the password.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              username:
                                description: Specifies the username for basic authentication.
                                type: string
                              usernameRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the username.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                            type: object
                          cleanSession:
                            description: Specifies setting the "clean session" flag
                              in the connect message that the MQTT broker should not
                              save it. If the value is "false", the broker stores
                              all missed messages for the client that subscribed with
                              QoS 1 or 2. Any messages that were going to be sent
                              by this client before disconnecting previously but didn't
                              send upon connecting to the broker. The default value
                              is "true".
                            type: boolean
                          clientID:
                            description: Specifies the client ID to be used for connection,
                              it must be no longer than 23 characters if specified
                              to use MQTT v3.1.
                            type: string
                          connectTimeout:
                            description: Specifies the amount of time that the client
                              try to open a connection to an MQTT broker before timing
                              out and getting error. A duration of 0 never times out.
                              The default value is "30s".
                            type: string
                          httpHeaders:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Specifies the additional HTTP headers that
                              the client sends in the WebSocket opening handshake.
                            type: object
                          keepAlive:
                            description: Specifies the amount of time that the client
                              should wait before sending a PING request to the broker.
                              This will allow the client to know that the connection
                              has not been lost with the server. A duration of 0 never
                              keeps alive. The default keep alive is "30s".
                            type: string
                          maxReconnectInterval:
                            description: Specifies the amount of time that the client
                              should wait before reconnecting to the broker. The first
                              reconnect interval is 1 second, and then the interval
                              is incremented by *2 until `MaxReconnectInterval` is
                              reached. This is only valid if `AutoReconnect` is true.
                              A duration of 0 may trigger the reconnection immediately.
                              The default value is "10m".
                            type: string
                          messageChannelDepth:
                            description: Specifies the size of the internal queue
                              that holds messages while the client is temporarily
                              offline, allowing the application to publish when the
                              client is reconnected. This is only valid if `AutoReconnect`
                              is true. The default value is "100".
                            type: integer
                          order:
                            description: Specifies the message routing to guarantee
                              order within each QoS level. If set to false, the message
                              can be delivered asynchronously from the client to the
                              application and possibly arrive out of order. The default
                              value is "true".
                            type: boolean
                          pingTimeout:
                            description: Specifies the amount of time that the client
                              should wait after sending a PING request to the broker.
                              This will allow the client to know that the connection
                              has been lost with the server. A duration of 0 may cause
                              unnecessary timeout error. The default value is "10s".
                            type: string
                          protocolVersion:
                            description: Specifies the MQTT protocol version that
                              the cluster uses to connect to broker. Legitimate values
                              are currently 3 - MQTT v3.1 or 4 - MQTT v3.1.1.
                            enum:
                            - 3
                            - 4
                            type: integer
                          resumeSubs:
                            description: Specifies to enable resuming of stored (un)subscribe
                              messages when connecting but not reconnecting. This
                              is only valid if `CleanSession` is false. The default
                              value is "false".
                            type: boolean
                          server:
                            description: Specifies the server URI of MQTT broker,
                              the format should be `schema://host:port`. The "schema"
                              is one of the "ws", "wss", "tcp", "unix", "ssl", "tls"
                              or "tcps".
                            pattern: ^(ws|wss|tcp|unix|ssl|tls|tcps)+://[^\s]*$
                            type: string
                          store:
                            description: Specifies to provide message persistence
                              in cases where QoS level is 1 or 2. The default store
                              is "memory".
                            properties:
                              directoryPrefix:
                                description: Specifies the directory prefix of the
                                  storage, if using file store. The default value
                                  is "/var/run/octopus/mqtt".
                                pattern: ^/.*[^/]$
                                type: string
                              type:
                                description: Specifies the type of storage. The default
                                  value is "memory".
                                enum:
                                - memory
                                - file
                                type: string
                            type: object
                          tlsConfig:
                            description: Specifies the TLS configuration that the
                              client connects to the MQTT broker.
                            properties:
                              caFilePEM:
                                description: Specifies the PEM format content of the
                                  CA certificate, which is used for validate the server
                                  certificate with.
                                type: string
                              caFilePEMRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the CA file
                                  PEM content.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              certFilePEM:
                                description: Specifies the PEM format content of the
                                  certificate(public key), which is used for client
                                  authenticate to the server.
                                type: string
                              certFilePEMRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the client certificate
                                  file PEM content.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              insecureSkipVerify:
                                description: Doesn't validate the server certificate.
                                type: boolean
                              keyFilePEM:
                                description: Specifies the PEM format content of the
                                  key(private key), which is used for client authenticate
                                  to the server.
                                type: string
                              keyFilePEMRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the client key
                                  file PEM content.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              serverName:
                                description: Indicates the name of the server, ref
                                  to http://tools.ietf.org/html/rfc4366#section-3.1.
                                type: string
                            type: object
                          will:
                            description: Specifies the will message that the client
                              gives it to the broker, which can be published to any
                              clients that are subscribed the provided topic.
                            properties:
                              payloadContent:
                                description: Specifies the payload content.
                                type: string
                              payloadEncode:
                                description: Specifies the encode way of payload content.
                                  The "base64" way allows to input bytes (`PayloadContent`)
                                  that cannot be characterized. The default way is
                                  "raw".
                                enum:
                                - raw
                                - base64
                                type: string
                              qos:
                                description: Specifies the QoS of the will message.
                                  The default value is "0".
                                enum:
                                - 0
                                - 1
                                - 2
                                type: integer
                              retained:
                                description: Specifies the will message to be retained.
                                  The default value is "false".
                                type: boolean
                              topic:
                                description: Specifies the topic for publishing the
                                  will message, if not set, the will topic will append
                                  "$will" to the topic name specified in global settings
                                  as its topic name.
                                properties:
                                  name:
                                    description: Specifies the static name of topic.
                                    pattern: ^[a-zA-Z0-9_]+.*[^/]$
                                    type: string
                                type: object
                            required:
                            - payloadContent
                            type: object
                          writeTimeout:
                            description: Specifies the amount of time that the client
                              publish a message successfully before getting a timeout
                              error. A duration of 0 never times out. The default
                              value is "30s".
                            type: string
                        required:
                        - server
                        type: object
                      message:
                        description: Specifies the message settings.
                        properties:
                          payloadEncode:
                            description: Specifies the encode way of payload content.
                              The default way is "raw".
                            enum:
                            - raw
                            - base64
                            type: string
                          qos:
                            description: Specifies the QoS of the message. The default
                              value is "0".
                            enum:
                            - 0
                            - 1
                            - 2
                            type: integer
                          retained:
                            description: Specifies if the last published message to
                              be retained. The default value is "false".
                            type: boolean
                          topic:
                            description: Specifies the topic settings.
                            properties:
                              name:
                                description: Specifies the static name of topic.
                                pattern: ^[a-zA-Z0-9_]+.*[^/]$
                                type: string
                              prefix:
                                description: Specifies the prefix for the dynamic
                                  name of topic. The prefix is required for dynamic
                                  name.
                                pattern: ^[a-zA-Z0-9_]+.*[^/]$
                                type: string
                              with:
                                description: Specifies the mode for the dynamic name
                                  of topic. The default mode is "nn".
                                enum:
                                - uid
                                - nn
                                type: string
                            type: object
                          waitTimeout:
                            description: Specifies the amount of time that the client
                              should wait after operating. A duration of 0 never times
                              out. The default value is "0s".
                            type: string
                        required:
                        - topic
                        type: object
                    required:
                    - client
                    - message
                    type: object
                type: object
              props:
                additionalProperties:
                  description: DummyProtocolDeviceSpecProps defines the property of
                    DummyProtocolDeviceSpec.
                  properties:
                    arrayProps:
                      description: Describes item properties of the array type.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    description:
                      description: Outlines the property.
                      type: string
                    objectProps:
                      additionalProperties:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      description: Describes properties of the object type.
                      type: object
                    readOnly:
                      description: Configures the property is readOnly or not.
                      type: boolean
                    type:
                      description: Describes the type of property.
                      enum:
                      - string
                      - int
                      - float
                      - boolean
                      - array
                      - object
                      type: string
                  required:
                  - type
                  type: object
                description: Describe the desired properties.
                type: object
              protocol:
                description: Protocol for accessing the dummy protocol device.
                properties:
                  ip:
                    description: Specifies where to connect the dummy protocol device.
                    type: string
                required:
                - ip
                type: object
            required:
            - protocol
            type: object
          status:
            description: DummyProtocolDeviceStatus defines the observed state of DummyProtocolDevice.
            properties:
              extension:
                description: Reports the extension of device.
                properties:
                  mqtt:
                    description: Reports the MQTT settings.
                    properties:
                      client:
                        description: Observes the client settings.
                        properties:
                          autoReconnect:
                            default: true
                            description: Observes if using the automatic reconnection
                              logic.
                            type: boolean
                          cleanSession:
                            default: true
                            description: Observes if setting the "clean session" flag.
                            type: boolean
                          clientID:
                            description: Observes the client ID.
                            type: string
                          configBasicAuth:
                            description: Observes if configuring basic authentication.
                            type: boolean
                          configTLS:
                            description: Observes if configuring TLS.
                            type: boolean
                          connectTimeout:
                            default: 30s
                            description: Observes the amount of time that the client
                              try to open a connection to an MQTT broker before timing
                              out and getting error.
                            type: string
                          httpHeaders:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Observes the additional HTTP headers that
                              the client sends in the WebSocket opening handshake.
                            type: object
                          keepAlive:
                            default: 30s
                            description: Observes the amount of time that the client
                              should wait before sending a PING request to the broker.
                            type: string
                          maxReconnectInterval:
                            default: 10m
                            description: Observes the amount of time that the client
                              should wait before reconnecting to the broker.
                            type: string
                          messageChannelDepth:
                            default: 100
                            description: Observes the size of the internal queue that
                              holds messages while the client is temporarily offline,
                              allowing the application to publish when the client
                              is reconnected.
                            type: integer
                          order:
                            default: true
                            description: Observes the message routing to guarantee
                              order within each QoS level.
                            type: boolean
                          pingTimeout:
                            default: 10s
                            description: Observes the amount of time that the client
                              should wait after sending a PING request to the broker.
                            type: string
                          protocolVersion:
                            description: Observes the protocol version.
                            type: integer
                          resumeSubs:
                            default: false
                            description: Observes if enabling resuming of stored (un)subscribe
                              messages when connecting but not reconnecting.
                            type: boolean
                          server:
                            description: Observes the broker server URI.
                            type: string
                          store:
                            description: Observes the store type.
                            properties:
                              directory:
                                description: Observes the directory of the file storage.
                                type: string
                              type:
                                default: memory
                                description: Observes the type of storage.
                                type: string
                            type: object
                          will:
                            description: Observes the will message that the client
                              gives it to the broker.
                            properties:
                              payloadEncode:
                                default: raw
                                description: Observes the encode way of payload content.
                                type: string
                              qos:
                                default: 0
                                description: Observes the QoS of the will message.
                                type: integer
                              retained:
                                default: false
                                description: Observes if retaining the will message.
                                type: boolean
                              topicName:
                                description: Observes the topic for publishing the
                                  will message.
                                type: string
                            type: object
                          writeTimeout:
                            default: 0s
                            description: Observes the amount of time that the client
                              publish a message successfully before getting a timeout
                              error.
                            type: string
                        type: object
                      message:
                        description: Observes the message settings.
                        properties:
                          payloadEncode:
                            default: raw
                            description: Observes the encode way of payload content.
                            type: string
                          qos:
                            default: 0
                            description: Observes the QoS of the message.
                            type: integer
                          retained:
                            default: false
                            description: Observes if retaining the message.
                            type: boolean
                          topicName:
                            description: Observes the topic for publishing/subscribing
                              the message.
                            type: string
                          waitTimeout:
                            default: 0s
                            description: Observes the amount of time that the client
                              should wait after operating.
                            type: string
                        type: object
                    type: object
                type: object
              props:
                additionalProperties:
                  description: DummyProtocolDeviceStatusProps defines the property
                    of DummyProtocolDeviceStatus.
                  properties:
                    arrayValue:
                      description: Reports the value of array type.
                      items:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      type: array
                    booleanValue:
                      description: Reports the value of boolean type.
                      type: boolean
                    floatValue:
                      anyOf:
                      - type: integer
                      - type: string
                      description: Reports the value of float type.
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    intValue:
                      description: Reports the value of int type.
                      type: integer
                    objectValue:
                      additionalProperties:
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      description: Reports the value of object type.
                      type: object
                    stringValue:
                      description: Reports the value of string type.
                      type: string
                    type:
                      description: Reports the type of property.
                      enum:
                      - string
                      - int
                      - float
                      - boolean
                      - array
                      - object
                      type: string
                  required:
                  - type
                  type: object
                description: Reports the observed value of the desired properties.
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    devices.edge.cattle.io/description: dummy device description
    devices.edge.cattle.io/device-property: ""
    devices.edge.cattle.io/enable: "true"
    devices.edge.cattle.io/icon: ""
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: octopus-adaptor-dummy
    app.kubernetes.io/version: master
  name: dummyspecialdevices.devices.edge.cattle.io
spec:
  group: devices.edge.cattle.io
  names:
    kind: DummySpecialDevice
    listKind: DummySpecialDeviceList
    plural: dummyspecialdevices
    singular: dummyspecialdevice
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.gear
      name: GEAR
      type: string
    - format: int32
      jsonPath: .status.rotatingSpeed
      name: SPEED
      type: integer
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DummySpecialDevice is the Schema for the dummy special device
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DummySpecialDeviceSpec defines the desired state of DummySpecialDevice.
            properties:
              extension:
                description: Specifies the extension of device.
                properties:
                  mqtt:
                    description: Specifies the MQTT settings.
                    properties:
                      client:
                        description: Specifies the client settings.
                        properties:
                          autoReconnect:
                            description: Configures using the automatic reconnection
                              logic. The default value is "true".
                            type: boolean
                          basicAuth:
                            description: Specifies the username and password that
                              the client connects to the MQTT broker. Without the
                              use of TLSConfig, the account information will be sent
                              in plaintext across the wire.
                            properties:
                              password:
                                description: Specifies the password for basic authenication.
                                type: string
                              passwordRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the password.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              username:
                                description: Specifies the username for basic authentication.
                                type: string
                              usernameRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the username.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                            type: object
                          cleanSession:
                            description: Specifies setting the "clean session" flag
                              in the connect message that the MQTT broker should not
                              save it. If the value is "false", the broker stores
                              all missed messages for the client that subscribed with
                              QoS 1 or 2. Any messages that were going to be sent
                              by this client before disconnecting previously but didn't
                              send upon connecting to the broker. The default value
                              is "true".
                            type: boolean
                          clientID:
                            description: Specifies the client ID to be used for connection,
                              it must be no longer than 23 characters if specified
                              to use MQTT v3.1.
                            type: string
                          connectTimeout:
                            description: Specifies the amount of time that the client
                              try to open a connection to an MQTT broker before timing
                              out and getting error. A duration of 0 never times out.
                              The default value is "30s".
                            type: string
                          httpHeaders:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Specifies the additional HTTP headers that
                              the client sends in the WebSocket opening handshake.
                            type: object
                          keepAlive:
                            description: Specifies the amount of time that the client
                              should wait before sending a PING request to the broker.
                              This will allow the client to know that the connection
                              has not been lost with the server. A duration of 0 never
                              keeps alive. The default keep alive is "30s".
                            type: string
                          maxReconnectInterval:
                            description: Specifies the amount of time that the client
                              should wait before reconnecting to the broker. The first
                              reconnect interval is 1 second, and then the interval
                              is incremented by *2 until `MaxReconnectInterval` is
                              reached. This is only valid if `AutoReconnect` is true.
                              A duration of 0 may trigger the reconnection immediately.
                              The default value is "10m".
                            type: string
                          messageChannelDepth:
                            description: Specifies the size of the internal queue
                              that holds messages while the client is temporarily
                              offline, allowing the application to publish when the
                              client is reconnected. This is only valid if `AutoReconnect`
                              is true. The default value is "100".
                            type: integer
                          order:
                            description: Specifies the message routing to guarantee
                              order within each QoS level. If set to false, the message
                              can be delivered asynchronously from the client to the
                              application and possibly arrive out of order. The default
                              value is "true".
                            type: boolean
                          pingTimeout:
                            description: Specifies the amount of time that the client
                              should wait after sending a PING request to the broker.
                              This will allow the client to know that the connection
                              has been lost with the server. A duration of 0 may cause
                              unnecessary timeout error. The default value is "10s".
                            type: string
                          protocolVersion:
                            description: Specifies the MQTT protocol version that
                              the cluster uses to connect to broker. Legitimate values
                              are currently 3 - MQTT v3.1 or 4 - MQTT v3.1.1.
                            enum:
                            - 3
                            - 4
                            type: integer
                          resumeSubs:
                            description: Specifies to enable resuming of stored (un)subscribe
                              messages when connecting but not reconnecting. This
                              is only valid if `CleanSession` is false. The default
                              value is "false".
                            type: boolean
                          server:
                            description: Specifies the server URI of MQTT broker,
                              the format should be `schema://host:port`. The "schema"
                              is one of the "ws", "wss", "tcp", "unix", "ssl", "tls"
                              or "tcps".
                            pattern: ^(ws|wss|tcp|unix|ssl|tls|tcps)+://[^\s]*$
                            type: string
                          store:
                            description: Specifies to provide message persistence
                              in cases where QoS level is 1 or 2. The default store
                              is "memory".
                            properties:
                              directoryPrefix:
                                description: Specifies the directory prefix of the
                                  storage, if using file store. The default value
                                  is "/var/run/octopus/mqtt".
                                pattern: ^/.*[^/]$
                                type: string
                              type:
                                description: Specifies the type of storage. The default
                                  value is "memory".
                                enum:
                                - memory
                                - file
                                type: string
                            type: object
                          tlsConfig:
                            description: Specifies the TLS configuration that the
                              client connects to the MQTT broker.
                            properties:
                              caFilePEM:
                                description: Specifies the PEM format content of the
                                  CA certificate, which is used for validate the server
                                  certificate with.
                                type: string
                              caFilePEMRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the CA file
                                  PEM content.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              certFilePEM:
                                description: Specifies the PEM format content of the
                                  certificate(public key), which is used for client
                                  authenticate to the server.
                                type: string
                              certFilePEMRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the client certificate
                                  file PEM content.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              insecureSkipVerify:
                                description: Doesn't validate the server certificate.
                                type: boolean
                              keyFilePEM:
                                description: Specifies the PEM format content of the
                                  key(private key), which is used for client authenticate
                                  to the server.
                                type: string
                              keyFilePEMRef:
                                description: Specifies the relationship of DeviceLink's
                                  references to refer to the value as the client key
                                  file PEM content.
                                properties:
                                  item:
                                    description: Specifies the item name of the referred
                                      reference.
                                    type: string
                                  name:
                                    description: Specifies the name of reference.
                                    type: string
                                required:
                                - item
                                - name
                                type: object
                              serverName:
                                description: Indicates the name of the server, ref
                                  to http://tools.ietf.org/html/rfc4366#section-3.1.
                                type: string
                            type: object
                          will:
                            description: Specifies the will message that the client
                              gives it to the broker, which can be published to any
                              clients that are subscribed the provided topic.
                            properties:
                              payloadContent:
                                description: Specifies the payload content.
                                type: string
                              payloadEncode:
                                description: Specifies the encode way of payload content.
                                  The "base64" way allows to input bytes (`PayloadContent`)
                                  that cannot be characterized. The default way is
                                  "raw".
                                enum:
                                - raw
                                - base64
                                type: string
                              qos:
                                description: Specifies the QoS of the will message.
                                  The default value is "0".
                                enum:
                                - 0
                                - 1
                                - 2
                                type: integer
                              retained:
                                description: Specifies the will message to be retained.
                                  The default value is "false".
                                type: boolean
                              topic:
                                description: Specifies the topic for publishing the
                                  will message, if not set, the will topic will append
                                  "$will" to the topic name specified in global settings
                                  as its topic name.
                                properties:
                                  name:
                                    description: Specifies the static name of topic.
                                    pattern: ^[a-zA-Z0-9_]+.*[^/]$
                                    type: string
                                type: object
                            required:
                            - payloadContent
                            type: object
                          writeTimeout:
                            description: Specifies the amount of time that the client
                              publish a message successfully before getting a timeout
                              error. A duration of 0 never times out. The default
                              value is "30s".
                            type: string
                        required:
                        - server
                        type: object
                      message:
                        description: Specifies the message settings.
                        properties:
                          payloadEncode:
                            description: Specifies the encode way of payload content.
                              The default way is "raw".
                            enum:
                            - raw
                            - base64
                            type: string
                          qos:
                            description: Specifies the QoS of the message. The default
                              value is "0".
                            enum:
                            - 0
                            - 1
                            - 2
                            type: integer
                          retained:
                            description: Specifies if the last published message to
                              be retained. The default value is "false".
                            type: boolean
                          topic:
                            description: Specifies the topic settings.
                            properties:
                              name:
                                description: Specifies the static name of topic.
                                pattern: ^[a-zA-Z0-9_]+.*[^/]$
                                type: string
                              prefix:
                                description: Specifies the prefix for the dynamic
                                  name of topic. The prefix is required for dynamic
                                  name.
                                pattern: ^[a-zA-Z0-9_]+.*[^/]$
                                type: string
                              with:
                                description: Specifies the mode for the dynamic name
                                  of topic. The default mode is "nn".
                                enum:
                                - uid
                                - nn
                                type: string
                            type: object
                          waitTimeout:
                            description: Specifies the amount of time that the client
                              should wait after operating. A duration of 0 never times
                              out. The default value is "0s".
                            type: string
                        required:
                        - topic
                        type: object
                    required:
                    - client
                    - message
                    type: object
                type: object
              gear:
                description: Specifies how fast the dummy special device should be.
                enum:
                - slow
                - middle
                - fast
                type: string
              "on":
                description: Turn on the dummy special device.
                type: boolean
              protocol:
                description: Protocol for accessing the dummy special device.
                properties:
                  location:
                    description: Specifies where to locate the dummy special device.
                    type: string
                required:
                - location
                type: object
            required:
            - "on"
            - protocol
            type: object
          status:
            description: DummySpecialDeviceStatus defines the observed state of DummySpecialDevice.
            properties:
              extension:
                description: Reports the extension of device.
                properties:
                  mqtt:
                    description: Reports the MQTT settings.
                    properties:
                      client:
                        description: Observes the client settings.
                        properties:
                          autoReconnect:
                            default: true
                            description: Observes if using the automatic reconnection
                              logic.
                            type: boolean
                          cleanSession:
                            default: true
                            description: Observes if setting the "clean session" flag.
                            type: boolean
                          clientID:
                            description: Observes the client ID.
                            type: string
                          configBasicAuth:
                            description: Observes if configuring basic authentication.
                            type: boolean
                          configTLS:
                            description: Observes if configuring TLS.
                            type: boolean
                          connectTimeout:
                            default: 30s
                            description: Observes the amount of time that the client
                              try to open a connection to an MQTT broker before timing
                              out and getting error.
                            type: string
                          httpHeaders:
                            additionalProperties:
                              items:
                                type: string
                              type: array
                            description: Observes the additional HTTP headers that
                              the client sends in the WebSocket opening handshake.
                            type: object
                          keepAlive:
                            default: 30s
                            description: Observes the amount of time that the client
                              should wait before sending a PING request to the broker.
                            type: string
                          maxReconnectInterval:
                            default: 10m
                            description: Observes the amount of time that the client
                              should wait before reconnecting to the broker.
                            type: string
                          messageChannelDepth:
                            default: 100
                            description: Observes the size of the internal queue that
                              holds messages while the client is temporarily offline,
                              allowing the application to publish when the client
                              is reconnected.
                            type: integer
                          order:
                            default: true
                            description: Observes the message routing to guarantee
                              order within each QoS level.
                            type: boolean
                          pingTimeout:
                            default: 10s
                            description: Observes the amount of time that the client
                              should wait after sending a PING request to the broker.
                            type: string
                          protocolVersion:
                            description: Observes the protocol version.
                            type: integer
                          resumeSubs:
                            default: false
                            description: Observes if enabling resuming of stored (un)subscribe
                              messages when connecting but not reconnecting.
                            type: boolean
                          server:
                            description: Observes the broker server URI.
                            type: string
                          store:
                            description: Observes the store type.
                            properties:
                              directory:
                                description: Observes the directory of the file storage.
                                type: string
                              type:
                                default: memory
                                description: Observes the type of storage.
                                type: string
                            type: object
                          will:
                            description: Observes the will message that the client
                              gives it to the broker.
                            properties:
                              payloadEncode:
                                default: raw
                                description: Observes the encode way of payload content.
                                type: string
                              qos:
                                default: 0
                                description: Observes the QoS of the will message.
                                type: integer
                              retained:
                                default: false
                                description: Observes if retaining the will message.
                                type: boolean
                              topicName:
                                description: Observes the topic for publishing the
                                  will message.
                                type: string
                            type: object
                          writeTimeout:
                            default: 0s
                            description: Observes the amount of time that the client
                              publish a message successfully before getting a timeout
                              error.
                            type: string
                        type: object
                      message:
                        description: Observes the message settings.
                        properties:
                          payloadEncode:
                            default: raw
                            description: Observes the encode way of payload content.
                            type: string
                          qos:
                            default: 0
                            description: Observes the QoS of the message.
                            type: integer
                          retained:
                            default: false
                            description: Observes if retaining the message.
                            type: boolean
                          topicName:
                            description: Observes the topic for publishing/subscribing
                              the message.
                            type: string
                          waitTimeout:
                            default: 0s
                            description: Observes the amount of time that the client
                              should wait after operating.
                            type: string
                        type: object
                    type: object
                type: object
              gear:
                description: Reports the current gear of dummy special device.
                enum:
                - slow
                - middle
                - fast
                type: string
              rotatingSpeed:
                description: Reports the detail number of speed of dummy special device.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: octopus-adaptor-dummy
    app.kubernetes.io/version: master
  name: octopus-adaptor-dummy-manager-role
rules:
- apiGroups:
  - devices.edge.cattle.io
  resources:
  - dummyprotocoldevices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - devices.edge.cattle.io
  resources:
  - dummyprotocoldevices/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - devices.edge.cattle.io
  resources:
  - dummyspecialdevices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - devices.edge.cattle.io
  resources:
  - dummyspecialdevices/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/name: octopus-adaptor-dummy
    app.kubernetes.io/version: master
  name: octopus-adaptor-dummy-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: octopus-adaptor-dummy-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: octopus-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: adaptor
    app.kubernetes.io/name: octopus-adaptor-dummy
    app.kubernetes.io/version: master
  name: octopus-adaptor-dummy-adaptor
  namespace: octopus-system
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: adaptor
      app.kubernetes.io/name: octopus-adaptor-dummy
      app.kubernetes.io/version: master
  template:
    metadata:
      labels:
        app.kubernetes.io/component: adaptor
        app.kubernetes.io/name: octopus-adaptor-dummy
        app.kubernetes.io/version: master
    spec:
      containers:
      - image: cnrancher/octopus-adaptor-dummy:master
        name: octopus
        volumeMounts:
        - mountPath: /var/lib/octopus/adaptors/
          name: sockets
      volumes:
      - hostPath:
          path: /var/lib/octopus/adaptors/
          type: DirectoryOrCreate
        name: sockets
